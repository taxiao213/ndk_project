apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        externalNativeBuild {
            cmake {
                arguments "-DFFMPEG_BUILD_VERSION=${Integer.valueOf(FFMPEG_BUILD_VERSION)}"
                cppFlags "-fexceptions", "-frtti"
            }
        }
    }

    sourceSets {
        main {
            if (Integer.valueOf(FFMPEG_BUILD_VERSION) == 1) {
                jniLibs.srcDirs = ['jniLibs/low_version']
            } else if (Integer.valueOf(FFMPEG_BUILD_VERSION) == 2) {
                jniLibs.srcDirs = ['jniLibs/high_version']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "Integer", "FFMPEG_BUILD_VERSION", "${FFMPEG_BUILD_VERSION}"
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "Integer", "FFMPEG_BUILD_VERSION", "${FFMPEG_BUILD_VERSION}"
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    rootProject.ext.dependencies.each { k, v -> implementation v }
    rootProject.ext.testImplementation.each { k, v -> testImplementation v }
    rootProject.ext.androidTestImplementation.each { k, v -> androidTestImplementation v }
}